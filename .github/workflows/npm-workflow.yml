# Name of the workflow
name: Node.js CI

# Specifies the events that trigger the workflow. In this case, it triggers on a push to the main branch and on pull requests targeting the main branch.
on:
  workflow_dispatch:
    inputs:
      package1:
        type: choice
        description: "Name of the package to install"
        required: true
        options:
          - axios
          - lodash
          - dayjs
          - "@skyline-/core"
      version1:
        description: "Version of the package to install"
        required: false

      package2:
        type: choice
        description: "Name of the package to install"
        required: true
        options:
          - axios
          - lodash
          - dayjs
          - "@skyline-/core"
      version2:
        description: "Version of the package to install"

      package3:
        type: choice
        description: "Name of the package to install"

        options:
          - axios
          - lodash
          - dayjs
          - "@skyline-/core"
      version3:
        description: "Version of the package to install"

      package4:
        type: choice
        description: "Name of the package to install"
        required: true
        options:
          - axios
          - lodash
          - dayjs
          - "@skyline-/core"
      version4:
        description: "Version of the package to install"

# Defines the job(s) that will be executed.
jobs:
  build:
    # Specifies the type of runner (virtual machine) to use. In this example, it uses the latest Ubuntu environment.
    runs-on: ubuntu-latest

    # Contains the sequence of steps to execute.
    steps:
      # This action checks out your repository so the workflow can access the code.
      - name: Checkout repository
        uses: actions/checkout@v3

      # Sets up Node.js, if needed (this step can be removed if not necessary).
      - name: Set up Node.js
        uses: actions/setup-node@v3
        with:
          node-version: "20" # Specify the Node.js version

      #  Installs the dependencies listed in package.json
      - name: Install dependencies
        run: npm install

      - name: Install first package
        run: npm install ${{ inputs['package1'] }}@${{ inputs['version1'] }} --save

      - name: Install second package
        if: ${{ inputs['package2'] != '' && inputs['version2'] != '' }}
        run: npm install ${{ inputs['package2'] }}@${{ inputs['version2'] }} --save

      - name: Install third package
        if: ${{ inputs['package3'] != '' && inputs['version3'] != '' }}
        run: npm install ${{ inputs['package3'] }}@${{ inputs['version3'] }} --save

      - name: Install fourth package
        if: ${{ inputs['package4'] != '' && inputs['version4'] != '' }}
        run: npm install ${{ inputs['package4'] }}@${{ inputs['version4'] }} --save

      - name: Configure Git
        run: |
          git config --global user.name "github-actions[bot]"
          git config --global user.email "github-actions[bot]@users.noreply.github.com"
          git add .
          git commit -m "Automated commit: update generated files"

      - name: Commit changes
        env:
          PAT_TOKEN: ${{ secrets.PAT_TOKEN }}
        run: git push https://$PAT_TOKEN@github.com/${{ github.repository }} HEAD:${{ github.ref }}
